@model EurovisionTotalizer.API.ViewModels.RepositoriesViewModel
@using EurovisionTotalizer.Domain.Enums
@{
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="page-title">Select a menu item</h1>
<p>Use the left menu to open pages.</p>

<div class="tables-container">

    <!-- Semifinal 1 -->
    <div class="table-wrapper">
        <h2>Semifinal 1</h2>
        <table class="styled-table">
            <thead>
                <tr>
                    <th>Country</th>
                    @foreach (var p in Model.Participants)
                    {
                        <th>@p.Name</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var c in Model.Countries.Where(c => c.SemiFinal == SemiFinal.First))
                {
                    <tr>
                        <td>@c.Name</td>
                        @foreach (var p in Model.Participants)
                        {
                            var prediction = p.SemifinalPredictions
                            .FirstOrDefault(x => x.Country.Name == c.Name);

                            if (prediction?.Type == PredictionType.DoesNotReachFinal)
                            {
                                <td>X</td>
                            }
                            else
                            {
                                <td>-</td>
                            }
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Semifinal 2 -->
    <div class="table-wrapper">
        <h2>Semifinal 2</h2>
        <table class="styled-table">
            <thead>
                <tr>
                    <th>Country</th>
                    @foreach (var p in Model.Participants)
                    {
                        <th>@p.Name</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var c in Model.Countries.Where(c => c.SemiFinal == SemiFinal.Second))
                {
                    <tr>
                        <td>@c.Name</td>
                        @foreach (var p in Model.Participants)
                        {
                            var prediction = p.SemifinalPredictions
                            .FirstOrDefault(x => x.Country.Name == c.Name);

                            if (prediction?.Type == PredictionType.DoesNotReachFinal)
                            {
                                <td>X</td>
                            }
                            else
                            {
                                <td>-</td>
                            }
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Final -->
    <div class="table-wrapper">
        <h2>Final</h2>
        <table class="styled-table">
            <thead>
                <tr>
                    <th>Country</th>
                    @foreach (var p in Model.Participants)
                    {
                        <th>@p.Name</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var c in Model.Countries.Where(c => c.IsInFinal))
                {
                    <tr>
                        <td>@c.Name</td>
                        @foreach (var p in Model.Participants)
                        {
                            var prediction = p.FinalPredictions
                            .FirstOrDefault(x => x.Country.Name == c.Name);

                            if (prediction?.Type == PredictionType.Last3InFinal)
                            {
                                <td>Bottom3</td>
                            }
                            else if (prediction?.Type == PredictionType.ExactPlaceInFinal && prediction.Place >= 1 && prediction.Place <= 10)
                            {
                                <td>@prediction.Place</td>
                            }
                            else
                            {
                                <td>-</td>
                            }
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>

</div>
